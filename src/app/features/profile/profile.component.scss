@use "@material/notched-outline/mdc-notched-outline";

$objects: avatar, name, class, race, level, shortDescription, attributes, skills,
  longDescription;

$field-bg: #fff3ba;

:host {
  display: block;
  padding: 1rem;
  max-width: 1200px;
  margin: 0 auto;
}

:host ::ng-deep formly-field {
  height: auto;

  // add back notched outline to disabled fields
  --mdc-outlined-text-field-disabled-outline-color: var(
    --mdc-outlined-text-field-outline-color
  );
  // fix grayed out text on disabled fields
  --mdc-outlined-text-field-disabled-input-text-color: var(
    --mdc-outlined-text-field-input-text-color
  );
  --mat-select-disabled-trigger-text-color: var(
    --mat-select-trigger-text-color
  );
  .mat-mdc-checkbox.mat-mdc-checkbox-disabled label {
    color: var(--mdc-form-field-label-text-color);
  }
  --mdc-outlined-text-field-disabled-label-text-color: var(
    --mdc-outlined-text-field-label-text-color
  );

  // hide the arrow on disabled selects
  .mat-form-field-disabled .mat-mdc-select .mat-mdc-select-arrow-wrapper {
    display: none;
  }
  // hide required indicator on disabled fields
  .mat-form-field-disabled .mat-form-field-required-marker {
    display: none;
  }
  // hide textarea placeholder when disabled
  .mat-form-field-disabled .mdc-text-field textarea::placeholder {
    color: transparent;
  }

  // autofill background color fix
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    box-shadow: inset 0 0 20px 20px $field-bg;
  }

  // width fix for fields so they can be resized properly
  // (see https://stackoverflow.com/questions/48376554/angular-5-material-form-fields-stuck-at-180px)
  .mat-form-field-infix,
  .mat-mdc-form-field-infix {
    width: auto !important;
  }

  // add background to the fields
  .mat-form-field-appearance-outline .mdc-text-field--outlined,
  .app-image-input,
  &.formly-field-skills .object-group {
    background-color: $field-bg;
    border-radius: var(--mdc-outlined-text-field-container-shape);
  }

  // Grid layout for the formly fields
  // | Avatar (drop file) | Name | Race | Class | Level |
  // | Avatar (drop file) |      Short description      |
  // | Avatar (drop file) |      Short description      |
  // |                Attributes (inline)               |
  // |   Skills (rows)   |      Long description        |
  // |   Skills (rows)   |      Long description        |
  // |   Skills (rows)   |      Long description        |

  &.formly-field-root > formly-field-object > .fields {
    display: grid;
    grid-gap: 0.25rem;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: auto 1fr auto 3.5fr;
    grid-template-areas:
      "avatar name class race level"
      "avatar shortDescription shortDescription shortDescription shortDescription"
      "skills attributes attributes attributes attributes"
      "skills longDescription longDescription longDescription longDescription";

    @media (max-width: 720px) {
      grid-template-rows: auto auto 0.65fr auto 3.5fr;
      grid-template-areas:
        "avatar name name class class"
        "avatar race race level level"
        "avatar shortDescription shortDescription shortDescription shortDescription"
        "skills attributes attributes attributes attributes"
        "skills longDescription longDescription longDescription longDescription";
    }
  }

  // loop through the objects and set the grid area to the object name
  @each $object in $objects {
    &.formly-field-#{$object} {
      grid-area: #{$object};
    }
  }

  &.formly-field-avatar,
  &.formly-field-avatar .app-image-input {
    aspect-ratio: 1 / 1;
    width: 250px;
  }

  mat-form-field:has(textarea) {
    height: 100%;
  }

  &.formly-field-longDescription {
    // restrict the height of the textarea field
    mat-form-field {
      max-height: 50%;
    }
    // make the textarea fill the height of the field
    .mat-mdc-form-field-flex,
    .mat-mdc-form-field-infix,
    textarea {
      height: 100%;
    }
  }

  // attributes layout
  &.formly-field-attributes > formly-field-object {
    legend {
      display: none;
    }
    & > .fields {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      justify-content: space-evenly;
      gap: 0.25rem;

      @media (max-width: 720px) {
        grid-template-columns: repeat(3, 1fr);
      }
      @media (max-width: 480px) {
        grid-template-columns: repeat(2, 1fr);
      }

      input {
        text-align: center;
      }
    }
  }

  // hide the number input arrows
  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  /* Firefox */
  input[type="number"] {
    -moz-appearance: textfield;
    appearance: textfield;
  }
}

.form-buttons,
.dev-controls {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 0.5rem;
  gap: 0.25rem;
}
